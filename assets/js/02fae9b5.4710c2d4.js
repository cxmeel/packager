"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[331],{3905:(e,n,r)=>{r.d(n,{Zo:()=>s,kt:()=>m});var t=r(67294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function c(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=t.createContext({}),i=function(e){var n=t.useContext(p),r=n;return e&&(r="function"==typeof e?e(n):c(c({},n),e)),r},s=function(e){var n=i(e.components);return t.createElement(p.Provider,{value:n},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},g=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=i(r),g=a,m=u["".concat(p,".").concat(g)]||u[g]||f[g]||o;return r?t.createElement(m,c(c({ref:n},s),{},{components:r})):t.createElement(m,c({ref:n},s))}));function m(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,c=new Array(o);c[0]=g;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[u]="string"==typeof e?e:a,c[1]=l;for(var i=2;i<o;i++)c[i]=r[i];return t.createElement.apply(null,c)}return t.createElement.apply(null,r)}g.displayName="MDXCreateElement"},76647:(e,n,r)=>{r.r(n),r.d(n,{contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var t=r(87462),a=(r(67294),r(3905));const o={},c="Packager",l={type:"mdx",permalink:"/packager/",source:"@site/pages/index.md",title:"Packager",description:"Packages up an Instance or tree of Instances into a single table.",frontMatter:{}},p=[{value:"Usage",id:"usage",level:2}],i={toc:p},s="wrapper";function u(e){let{components:n,...r}=e;return(0,a.kt)(s,(0,t.Z)({},i,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"packager"},"Packager"),(0,a.kt)("p",null,"Packages up an Instance or tree of Instances into a single table.\nSupports linking of Instance-based properties to their corresponding\nInstance (as long as the Instance is within the tree being packaged)."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local Packager = require(script.Parent.Packager)\n\n-- Create a new Packager from the latest Roblox API dump\nlocal packager = Packager.fetchFromServer()\n\nlocal tree = packager:CreatePackage(workspace.MyModel)\n--[[\n  {\n    Refs = {\n      [MyModel<Model>] = "AABBCC",\n    },\n    Tree = {\n      Name = "MyModel",\n      ClassName = "Model",\n      Ref = "AABBCC",\n      Properties = {\n        PrimaryPart = {\n          Type = "Ref",\n          Value = "BBCCDD",\n        },\n      },\n      Children = {\n        {\n          Name = "Part",\n          ClassName = "Part",\n          Ref = "BBCCDD",\n          ...,\n        },\n      },\n      Attributes = {\n        OwnerId = {\n          Type = "number",\n          Value = 1233456789,\n        },\n      },\n      Tags = { "Tag1", "Tag2" },\n    },\n  }\n]]\n')))}u.isMDXComponent=!0}}]);